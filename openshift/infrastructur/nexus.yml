apiVersion: v1
kind: Template
metadata:
  name: nexus
  labels:
parameters:
  - name: HOSTNAME_HTTP
    description: 'Custom hostname for http service route.  Leave blank for default hostname, e.g.: <APP_NAME-name>-<project>.<default-domain-stuff>'
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    labels:
      app: nexus
    name: nexus
  spec:
    tags:
    - annotations:
        description: The Nexus Docker image
        tags: nexus
      from:
        kind: DockerImage
        name: sonatype/nexus
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Local
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    labels:
      app: nexus
    name: nexus
  spec:
    replicas: 1
    selector:
      app: nexus
      deploymentconfig: nexus
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
        post:
          failurePolicy: Abort
          execNewPod:
            containerName: nexus
            command:
              - "/bin/bash"
              - "-c"
              - "curl -o /tmp/nexus-functions -s https://raw.githubusercontent.com/OpenShiftDemos/nexus/master/scripts/nexus-functions; source /tmp/nexus-functions; add_nexus3_redhat_repos admin admin123 http://nexus:8081"
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: nexus
          deploymentconfig: nexus
      spec:
        containers:
        - image: ''
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
              - echo
              - ok
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: nexus
          ports:
          - containerPort: 8081
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /nexus/content/groups/public
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /sonatype-work
            name: nexus-volume-1
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: nexus-volume-1
          persistentVolumeClaim:
            claimName: nexus-pv
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - nexus
        from:
          kind: ImageStreamTag
          name: nexus:latest
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: nexus
    name: nexus
  spec:
    ports:
    - name: 8081-tcp
      port: 8081
      protocol: TCP
      targetPort: 8081
    selector:
      app: nexus
      deploymentconfig: nexus
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: null
    labels:
      app: nexus
    name: nexus
  spec:
    host: ${HOSTNAME_HTTP}
    port:
      targetPort: 8081-tcp
    to:
      kind: Service
      name: nexus
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
    name: nexus-pv
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1G